<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Voting Options for President and Vice President</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            margin: 0;
            padding: 0;
        }
    
        .container {
            max-width: 800px;
            margin: 20px auto;
            padding: 0 20px;
            overflow-y: auto;
            max-height: 600px; 
        }

        h1, h2 {
            text-align: center;
            padding-top: 50px;
        }
    
        .order {
            text-align: center;
            margin-bottom: 20px;
        }
    
        .order select {
            margin-left: 10px;
        }
    
        .president-options, .vp-options {
            display: flex;
            flex-wrap: wrap;
            justify-content: space-between;    
        }
    
        .option {
            width: calc(20% - 20px);
            margin-bottom: 20px;
            background-color: #4caf50;
            padding: 10px;
            box-sizing: border-box;
            border-radius: 5px;
            text-align: center;
            color: white;
        }

        .option:hover {
            background-color: #45a049;
            cursor: pointer;
        }

        .option.selected {
            background-color: #075225;
        }
    
        .option-image img {
            max-width: 100%;
            height: auto;
        }
      
        .buttons {
            text-align: center;
            margin-top: 20px;
        }
    
        .buttons button {
            padding: 10px 20px;
            margin: 0 5px;
            border: none;
            border-radius: 5px;
            background-color: #4caf50;
            color: #fff;
        }
    
        .buttons button:focus {
            outline: none;
        }
    
        .buttons button:hover {
            background-color: #45a049;
        }

        .buttons button.selected:hover {
            background-color: #075225;
        }
    
        .write-in button {
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            background-color: #4caf50;
            color: #fff;
            cursor: pointer;
            margin-right: 150px; /* Add margin between buttons */
        }
    
        .write-in button:focus {
            outline: none;
        }
    
        .write-in button:hover {
            background-color: #45a049; /* Changing background color on hover */
        }

        write-in {
            display: flex;
            justify-content: center; /* Center the elements horizontally */
            margin-top: 20px;
        }

        .description-box {
            margin-top: 10px;
        }

        .description-box label {
            display: block;
            margin-bottom: 5px;
        }

        .description-box input[type="text"] {
            width: 40%; 
            margin-bottom: 10px; 
        }
    </style>
    
</head>
<body>
    <div class="container">
        <h1>Welcome to <%= name %></h1>
        <% for (const office in officesData) { %>
            <h2>Voting options for <%= office %></h2>
            <div class="<%= office.toLowerCase() + '-options' %>">
                <% officesData[office].forEach(candidate => { %>
                    <div class="option" onclick="toggleSelection(this)">
                        <% if(candidate.photo) { %>
                            <div class="option-image">
                                <img src="data:image/jpeg;base64,<%= candidate.photo.toString('base64') %>" alt="Photo of <%= candidate.name %>">
                            </div>
                        <% } %>
                        <!-- Display candidate name -->
                        <div class="option-name"><%= candidate.name %></div>
                    </div>
                <% }) %>
            </div>
            <!-- Write-in and buttons for each category -->
            <div class="write-in-<%= office.toLowerCase() %>">
                <button class="write-in-fname" onclick="handleWriteInClick('<%= office %>')">Write-in</button>
                <div class="description-box" id="<%= office.toLowerCase() %>WriteInBox" style="display: none;">
                    <label for="writeInText<%= office %>">Enter Candidate First Name:</label>
                    <input type="text" id="writeInText<%= office %>" name="firstName">
                    <label for="writeInText<%= office %>">Enter Candidate Last Name:</label>
                    <input type="text" id="writeInText<%= office %>" name="lastName">
                </div>
            </div>
            <div class="buttons">
                <button class="option" onclick="toggleSelection(this)">No Votes</button>
            </div>
        <% } %>
        <button type="button" onclick="submitVotes()" class="buttons">Submit Votes</button>
    </div>

    <script>   
        // Object to track if write-in is active and input box is not empty for each category
        var writeInActive = {};

        // Function to handle selecting option
        function toggleSelection(option) {
            // Your toggleSelection function
        }

        // Function to handle write-in button click for each category
        function handleWriteInClick(office) {
            var writeInBoxId = office.toLowerCase() + 'WriteInBox';
            var writeInActiveKey = office.toLowerCase();

            var writeInBox = document.getElementById(writeInBoxId);

            // Toggle the visibility of the text box
            if (writeInBox.style.display === 'none') {
                writeInBox.style.display = 'block';
                writeInActive[writeInActiveKey] = true;
            } else {
                writeInBox.style.display = 'none';
                writeInActive[writeInActiveKey] = false;
            }
        }

        // Function to check if token in localstorage
        function checkTokenLocalStorage() {
            if (!localStorage.getItem('token')) {
                // Redirect to login page if token doesn't exist in localStorage
                window.location.href = '/';
            }
        }

        function logout() {
            localStorage.removeItem('token');
            // Redirect to login page after logout
            window.location.href = '/';
        }

        // Function to handle the pageshow event
        function handlePageShow(event) {
            if (event.persisted) {
                // If the page is shown from the cache (e.g., when navigating back),
                // check if the token is still in local storage
                checkTokenLocalStorage();
            }
        }

        // Add event listener for the pageshow event
        window.addEventListener('pageshow', handlePageShow);
    </script>
</body>
</html>
