<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Voting Options for President and Vice President</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            margin: 0;
            padding: 0;
        }
    
        .container {
            max-width: 800px;
            margin: 20px auto;
            padding: 0 20px;
        }
    
        h1, h2 {
            text-align: center;
            padding-top: 50px;
        }
    
        .order {
            text-align: center;
            margin-bottom: 20px;
        }
    
        .order select {
            margin-left: 10px;
        }
    
        .president-options, .vp-options {
            display: flex;
            flex-wrap: wrap;
            justify-content: space-between;    
        }
    
        .option {
            width: calc(20% - 20px);
            margin-bottom: 20px;
            background-color: #4caf50;
            padding: 10px;
            box-sizing: border-box;
            border-radius: 5px;
            text-align: center;
            color: white;
            cursor: pointer; /* Add cursor pointer */
            transition: background-color 0.3s ease; /* Adding transition for smooth hover effect */
        }
    
        .option.selected {
            background-color: #075225; /* Changing background color when selected */
        }
    
        .option:hover {
            background-color: #45a049; /* Changing background color on hover */
        }
    
        .option:active {
            background-color: #075225; /* Changing background color when actively clicked */
        }
    
        .option-image img {
            max-width: 100%;
            height: auto;
        }
    
        .write-in {
            display: flex;
            justify-content: space-between;
            margin-top: 20px;
        }
    
        .write-in button {
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            background-color: #4caf50;
            color: #fff;
            cursor: pointer;
            transition: background-color 0.3s ease; /* Adding transition for smooth hover effect */
        }
    
        .write-in button:focus {
            outline: none;
        }
    
        .write-in button:hover {
            background-color: #45a049; /* Changing background color on hover */
        }
    
        .write-in button:active {
            background-color: #075225; /* Changing background color when actively clicked */
        }
    
        .buttons {
            text-align: center;
            margin-top: 20px;
        }
    
        .buttons button {
            padding: 10px 20px;
            margin: 0 5px;
            border: none;
            border-radius: 5px;
            background-color: #4caf50;
            color: #fff;
            cursor: pointer;
            transition: background-color 0.3s ease; /* Adding transition for smooth hover effect */
        }
    
        .buttons button:focus {
            outline: none;
        }
    
        .buttons button:hover {
            background-color: #45a049; /* Changing background color on hover */
        }
    
        .buttons button:active {
            background-color: #075225; /* Changing background color when actively clicked */
        }
    
        .write-in {
            display: flex;
            justify-content: space-between;
            margin-top: 20px;
        }
    
        .write-in button {
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            background-color: #4caf50;
            color: #fff;
            cursor: pointer;
            margin-right: 150px; /* Add margin between buttons */
            transition: background-color 0.3s ease; /* Adding transition for smooth hover effect */
        }
    
        .write-in button:focus {
            outline: none;
        }
    
        .write-in button:hover {
            background-color: #45a049; /* Changing background color on hover */
        }
    
        .write-in button:active {
            background-color: #075225; /* Changing background color when actively clicked */
        }
    
        .description-box {
            margin-top: 20px;
        }
    
        .description-box label {
            display: block;
            margin-bottom: 5px;
        }
    
        .description-box input[type="text"] {
            width: 100%;
            padding: 10px;
            border-radius: 5px;
            border: 1px solid #ccc;
            box-sizing: border-box;
        }
    </style>
    
</head>
<body>
    <div class="container">
        <h1>Welcome to <%= name %></h1>
        <% for (const office in officesData) { %>
            <h2>Voting options for <%= office %></h2>
            <div class="<%= office === 'President' ? 'president-options' : 'vp-options' %>">
                <% officesData[office].forEach(candidate => { %>
                    <div class="option" onclick="toggleSelection(this)">
                        <% if(candidate.photo) { %>
                            <div class="option-image">
                                <img src="data:image/jpeg;base64,<%= candidate.photo.toString('base64') %>" alt="Photo of <%= candidate.name %>">
                            </div>
                        <% } %>
                        <!-- Display candidate name -->
                        <div class="option-name"><%= candidate.name %></div>
                    </div>
                <% }) %>
            </div>
            <!-- President write-in and buttons -->
            <div class="write-in">
                <button class="write-in-fname" onclick="handleWriteInClickPresident()">Write-in</button>
                <div class="description-box" id="firstNameBoxPresident" style="display: none;">
                    <label for="writeInText">Enter Candidate Name:</label>
                    <input type="text" id="writeInTextPresident">
                </div>
            </div>
            <div class="buttons">
                <!-- Button to navigate to Vice President -->
                <button type="button" onclick="scrollToVicePresident()">Next: Vice President</button>
            </div>
        <% } %>
        <button id="submitBtn" onclick="submitVotes()">Submit Votes</button>
    </div>


    <script>
        // Function to handle selecting option
        function toggleSelection(option) {
            // Toggle the selected class on the clicked option
            option.classList.toggle('selected');
        }

        // Function to handle write-in button click for President
        function handleWriteInClickPresident() {
            var firstNameBox = document.getElementById('firstNameBoxPresident');
            var selectedOption = document.querySelector('.president-options .option.selected');

            // Deselect the previously selected option, if any
            if (selectedOption) {
                selectedOption.classList.remove('selected');
            }

            // Toggle the visibility of the text box
            if (firstNameBox.style.display === 'none') {
                firstNameBox.style.display = 'block';
            } else {
                firstNameBox.style.display = 'none';
            }
        }

        // Function to handle write-in button click for Vice President
        function handleWriteInClickVicePresident() {
            var firstNameBox = document.getElementById('firstNameBoxVicePresident');
            var selectedOption = document.querySelector('.vp-options .option.selected');

            // Deselect the previously selected option, if any
            if (selectedOption) {
                selectedOption.classList.remove('selected');
            }

            // Toggle the visibility of the text box
            if (firstNameBox.style.display === 'none') {
                firstNameBox.style.display = 'block';
            } else {
                firstNameBox.style.display = 'none';
            }
        }

    
    // Function to handle selecting option
    function toggleSelection(option) {
        var allOptions = option.parentElement.querySelectorAll('.option');
        allOptions.forEach(function(opt) {
            if (opt !== option) {
                opt.classList.remove('selected');
            }
        });
        // Toggle the selected class on the clicked option
        option.classList.toggle('selected');
    }

    // Function to handle write-in button click for President
    function handleWriteInClickPresident() {
        var firstNameBox = document.getElementById('firstNameBoxPresident');
        var selectedOption = document.querySelector('.president-options .option.selected');

        // Deselect the previously selected option, if any
        if (selectedOption) {
            selectedOption.classList.remove('selected');
        }

        // Toggle the visibility of the text box
        if (firstNameBox.style.display === 'none') {
            firstNameBox.style.display = 'block';
        } else {
            firstNameBox.style.display = 'none';
        }
    }

    // Function to handle write-in button click for Vice President
    function handleWriteInClickVicePresident() {
        var firstNameBox = document.getElementById('firstNameBoxVicePresident');
        var selectedOption = document.querySelector('.vp-options .option.selected');

        // Deselect the previously selected option, if any
        if (selectedOption) {
            selectedOption.classList.remove('selected');
        }

        // Toggle the visibility of the text box
        if (firstNameBox.style.display === 'none') {
            firstNameBox.style.display = 'block';
        } else {
            firstNameBox.style.display = 'none';
        }
    }

    // Function to scroll to Vice President section
    function scrollToVicePresident() {
        var vpSection = document.getElementById("vicePresidentSection");
        vpSection.style.display = "block";
        vpSection.scrollIntoView({ behavior: 'smooth' });
    }

    // Variable to track if write-in is active and input box is not empty
    var writeInActive = false;

    // Function to handle selecting option
    function toggleSelection(option) {
        // Check if write-in is active and input box is not empty
        if (writeInActive && document.getElementById('writeInTextPresident').value.trim() !== '') {
            alert("Please clear the write-in text before voting for a candidate.");
            return;
        }
        
        // Toggle the selected class on the clicked option
        option.classList.toggle('selected');
    }

    // Function to handle write-in button click for President
    function handleWriteInClickPresident() {
        var firstNameBox = document.getElementById('firstNameBoxPresident');
        var selectedOption = document.querySelector('.president-options .option.selected');

        // Toggle the visibility of the text box
        if (firstNameBox.style.display === 'none') {
            firstNameBox.style.display = 'block';
            writeInActive = true;
        } else {
            firstNameBox.style.display = 'none';
            writeInActive = false;
        }

        // Deselect the previously selected option, if any
        if (selectedOption) {
            selectedOption.classList.remove('selected');
        }
    }

    // Function to handle write-in button click for Vice President
    function handleWriteInClickVicePresident() {
        var firstNameBox = document.getElementById('firstNameBoxVicePresident');
        var selectedOption = document.querySelector('.vp-options .option.selected');

        // Toggle the visibility of the text box
        if (firstNameBox.style.display === 'none') {
            firstNameBox.style.display = 'block';
            writeInActive = true;
        } else {
            firstNameBox.style.display = 'none';
            writeInActive = false;
        }

        // Deselect the previously selected option, if any
        if (selectedOption) {
            selectedOption.classList.remove('selected');
        }
    }
    // Function to check if token in localstorage
    function checkTokenLocalStorage() {
        if (!localStorage.getItem('token')) {
            // Redirect to login page if token doesn't exist in localStorage
            window.location.href = '/';
        }
    }
    function logout() {
        localStorage.removeItem('token');
        // Redirect to login page after logout
        window.location.href = '/';
    }
    // Function to handle the pageshow event
    function handlePageShow(event) {
        if (event.persisted) {
            // If the page is shown from the cache (e.g., when navigating back),
            // check if the token is still in local storage
            checkTokenLocalStorage();
        }
    }

    // Add event listener for the pageshow event
    window.addEventListener('pageshow', handlePageShow);
    </script>
    
</body>
</html>
