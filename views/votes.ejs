<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<title>Vote for Office</title>
<style>
    body { font-family: Arial, sans-serif; }
    .office { margin-bottom: 30px; }
    .office h2 { text-align: center; }
    .candidate { text-align: center; margin-bottom: 20px; }
    img { width: 100px; height: 100px; }
    label { display: block; margin-top: 10px; }
</style>
</head>
<body>
<h1>Vote for Office</h1>
<form id="voteForm" action="/submit-vote" method="post">
    <% officesData.forEach(function(office) { %>
        <div class="office">
            <h2><%= office.officeName %></h2>
            <input type="hidden" name="ballotId" value="<%= ballotId %>">
            <% office.candidates.forEach(function(candidate) { %>
                <div class="candidate">
                    <img src="data:image/jpeg;base64,<%= candidate.photo.toString('base64') %>" alt="Photo of <%= candidate.name %>">
                    <label>
                        <input type="radio" name="<%= office.officeId %>" value="<%= candidate.candidateId %>"> 
                        <%= candidate.name %>
                    </label>
                </div>
            <% }); %>
            <div>
                <h3>Write-In:</h3>
                <label>First Name: <input type="text" name="<%= office.officeId %>_writein_first"></label>
                <label>Last Name: <input type="text" name="<%= office.officeId %>_writein_last"></label>
            </div>
        </div>
    <% }); %>
    <button type="submit">Submit Vote</button>
</form>

<script>
    document.getElementById("voteForm").addEventListener("submit", async function(event) {
        event.preventDefault();
        const formData = new FormData(this);
        const serializedFormData = {};
        formData.forEach((value, key) => {
            if (key.includes('_writein_')) { // Check for 'first' or 'last'
                let namePart = key.split('_').pop(); // 'first' or 'last'
                let officeId = key.split('_')[0];
                if (!serializedFormData[officeId + '_writein']) {
                    serializedFormData[officeId + '_writein'] = {};
                }
                serializedFormData[officeId + '_writein'][namePart] = value;
            } else {
                serializedFormData[key] = value;
            }
        });

        try {
            const response = await fetch('/submit-vote', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ ballotId: serializedFormData.ballotId, formData: serializedFormData })
            });

            if (response.ok) {
                console.log('Vote submitted successfully');
                window.location.href = '/welcome';
            } else {
                console.error('Error submitting vote:', response.statusText);
            }
        } catch (error) {
            console.error('Error submitting vote:', error);
        }
    });
</script>


</body>
</html>
